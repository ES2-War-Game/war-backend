services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: wargame
      POSTGRES_USER: wargame
      POSTGRES_PASSWORD: wargame
    ports:
      - "5432:5432"
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "wargame"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis-war
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis --notify-keyspace-events Ex
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        SKIP_TESTS: "true"
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/wargame
      - SPRING_DATASOURCE_USERNAME=wargame
      - SPRING_DATASOURCE_PASSWORD=wargame
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=redis
      - SPRING_DATA_REDIS_USERNAME=default
    volumes:
      - ~/.m2:/root/.m2
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    
volumes:
  db-data:
